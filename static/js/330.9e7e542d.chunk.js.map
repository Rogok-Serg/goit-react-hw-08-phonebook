{"version":3,"file":"static/js/330.9e7e542d.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","page/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"button\":\"ContactForm_button__eSwX9\"};","export const selectContacts = state => state.contactsStorage.contacts.items;\nexport const selectIsLoading = state =>\n  state.contactsStorage.contacts.isLoading;\nexport const selectError = state => state.contactsStorage.contacts.error;\nexport const selectFilter = state => state.contactsStorage.filter;\n","// import PropTypes from 'prop-types';\n// import { nanoid } from 'nanoid';\nimport css from './ContactForm.module.css';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/authentificated/authOperations';\nimport { selectContacts } from 'redux/contacts/selectors';\n// import { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handelInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onAddContact = contactData => {\n    const comparison = contacts.find(\n      el => contactData.name.toLowerCase() === el.name.toLowerCase()\n    );\n\n    if (comparison) {\n      alert(`${contactData.name} is already in contacts!`);\n      return;\n    }\n\n    const contact = {\n      ...contactData,\n    };\n    dispatch(addContact(contact));\n  };\n\n  const handelSubmit = e => {\n    e.preventDefault();\n    onAddContact({ name, phone });\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handelSubmit}>\n      <span>Name</span>\n      <label className={css.label}>\n        <input\n          onChange={handelInputChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <span>Phone</span>\n      <label>\n        <input\n          onChange={handelInputChange}\n          type=\"text\"\n          name=\"phone\"\n          value={phone}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"items\":\"ContactList_items__1HfWM\"};","// import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { useCallback, useEffect } from 'react';\nimport {\n  deleteContact,\n  fetchContacts,\n} from 'redux/authentificated/authOperations';\n// import { deleteContact, fetchContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const getApiContacts = useCallback(\n    () => dispatch(fetchContacts()),\n    [dispatch]\n  );\n\n  useEffect(() => {\n    getApiContacts();\n  }, [getApiContacts]);\n\n  const onRemoveContact = contactId => dispatch(deleteContact(contactId));\n\n  const getFilteredContacts = () => {\n    return contacts?.filter(\n      contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n        contact.phone.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const visible = getFilteredContacts();\n\n  if (!visible.length) return null;\n\n  return (\n    <ul className={css.list}>\n      {getFilteredContacts().map(({ id, name, phone }) => {\n        return (\n          <li className={css.items} key={id}>\n            <p>{name} </p>\n            <p>: {phone}</p>\n            <button type=\"button\" onClick={() => onRemoveContact(id)}>\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","// import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/contactsStorageReducer';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label className={css.filter}>\n      <input\n        className={css.input}\n        type=\"text\"\n        value={filter}\n        onChange={changeFilter}\n      />\n    </label>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  return (\n    <div>\n      {' '}\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n      {isLoading && !error && <Loader />}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contactsStorage","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","ContactForm","useState","name","setName","phone","setPhone","useSelector","dispatch","useDispatch","handelInputChange","e","target","value","className","css","onSubmit","preventDefault","contactData","find","el","toLowerCase","alert","contact","addContact","onAddContact","onChange","type","pattern","title","required","ContactList","getApiContacts","useCallback","fetchContacts","useEffect","getFilteredContacts","includes","length","map","id","onClick","contactId","deleteContact","Filter","setFilter","Loader"],"sourceRoot":""}