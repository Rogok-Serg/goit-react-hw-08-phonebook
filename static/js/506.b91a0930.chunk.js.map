{"version":3,"file":"static/js/506.b91a0930.chunk.js","mappings":"kLA8CA,UA3CqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MAmBjB,OACE,4BACE,wBAAI,2BACJ,kBAAMC,SApBmB,SAAAC,GAC3BA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAOF,EAAKG,SAASC,MACrBC,EAAQL,EAAKM,UAAUF,MACvBG,EAAWP,EAAKQ,aAAaJ,MAEnCT,GACEc,EAAAA,EAAAA,IAAa,CACXP,KAAAA,EACAG,MAAAA,EACAE,SAAAA,KAGJP,EAAKU,OACN,EAKG,WACE,uBAAG,WACH,4BACE,kBAAOR,KAAK,WAAWS,KAAK,OAAOC,UAAQ,EAACC,UAAW,OAEzD,uBAAG,YACH,4BACE,kBAAOX,KAAK,YAAYS,KAAK,QAAQC,UAAQ,OAE/C,8BACE,uBAAG,eACH,kBAAOV,KAAK,eAAeS,KAAK,WAAWC,UAAQ,EAACC,UAAW,QAEjE,mBACA,mBAAQF,KAAK,SAAb,SAAsB,iBAI7B,C","sources":["page/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { registerUser } from 'redux/authentificated/authOperations';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmitRegister = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.userName.value;\n    const email = form.userEmail.value;\n    const password = form.userPassword.value;\n\n    dispatch(\n      registerUser({\n        name,\n        email,\n        password,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <div>\n      <h1>Register Your Account</h1>\n      <form onSubmit={handleSubmitRegister}>\n        <p>Name:</p>\n        <label>\n          <input name=\"userName\" type=\"text\" required minLength={5} />\n        </label>\n        <p>Email:</p>\n        <label>\n          <input name=\"userEmail\" type=\"email\" required />\n        </label>\n        <label>\n          <p>Password:</p>\n          <input name=\"userPassword\" type=\"password\" required minLength={7} />\n        </label>\n        <br />\n        <button type=\"submit\">Sing Up</button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","name","userName","value","email","userEmail","password","userPassword","registerUser","reset","type","required","minLength"],"sourceRoot":""}